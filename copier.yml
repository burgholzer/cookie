# [[[cog
# from cog_cc import CC
#
# cc = CC("cookiecutter.json")
# ]]]
# [[[end]]]

# [[[cog print(cc.project_name.yaml()) ]]]
project_name:
  type: str
  help: The name of your project
  # [[[end]]]
  validator: >-
    {% if not project_name %} You must provide a name for the project. {% endif
    %}

# [[[cog print(cc.org.yaml()) ]]]
org:
  type: str
  help: The name of your GitHub org
  # [[[end]]]
  default: "cda-tum"

# [[[cog print(cc.namespace.yaml()) ]]]
namespace:
  type: str
  help: The name of your package namespace (e.g., mqt, mnt, mmft, etc.)
  # [[[end]]]
  default: "mqt"

# [[[cog print(cc.url.yaml()) ]]]
url:
  type: str
  help: The url to your GitHub repository
  # [[[end]]]
  default: "https://github.com/{{ org }}/{{ namespace }}-{{ project_name }}"

# [[[cog print(cc.full_name.yaml()) ]]]
full_name:
  type: str
  help: Your name
  # [[[end]]]
  placeholder: My Name
  validator: >-
    {% if not full_name %} You must provide a name (possibly yours) to place in
    your config files. {% endif %}

# [[[cog print(cc.email.yaml()) ]]]
email:
  type: str
  help: Your email
  # [[[end]]]
  placeholder: me@email.com
  validator: >-
    {% if not email %} You must provide an email (possibly yours) to place in
    your config files, as required by PyPI. {% endif %}

# [[[cog print(cc.project_short_description.yaml()) ]]]
project_short_description:
  type: str
  help: A short description of your project
  # [[[end]]]
  default: A great package.

# [[[cog print(cc.backend.yaml()) ]]]
backend:
  help: Choose a build backend
  choices:
    "Hatchling                      - Pure Python (recommended)": hatch
    "Scikit-build-core              - Compiled C++ (recommended)": skbuild
    "Maturin                        - Compiled Rust (recommended)": maturin
  # [[[end]]]

_templates_suffix: ""

_subdirectory: "{% raw %}{{cookiecutter.project_name}}{% endraw %}"

_jinja_extensions:
  - copier_templates_extensions.TemplateExtensionLoader
  - helpers/extensions.py:CookiecutterNamespace
